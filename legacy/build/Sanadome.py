
from datetime import datetime, timedelta
from collections import defaultdict
import json
import pprint

# Split the input strings into lists
dates = ["2025-03-31T22:00:00Z", "2025-04-01T22:00:00Z", "2025-04-02T22:00:00Z", "2025-04-03T22:00:00Z", "2025-04-04T22:00:00Z", "2025-04-05T22:00:00Z", "2025-04-06T22:00:00Z", "2025-04-07T22:00:00Z", "2025-04-08T22:00:00Z", "2025-04-09T22:00:00Z", "2025-04-10T22:00:00Z", "2025-04-11T22:00:00Z", "2025-04-12T22:00:00Z", "2025-04-13T22:00:00Z", "2025-04-14T22:00:00Z", "2025-04-15T22:00:00Z", "2025-04-16T22:00:00Z", "2025-04-17T22:00:00Z", "2025-04-18T22:00:00Z", "2025-04-19T22:00:00Z", "2025-04-20T22:00:00Z", "2025-04-21T22:00:00Z", "2025-04-22T22:00:00Z", "2025-04-23T22:00:00Z", "2025-04-24T22:00:00Z", "2025-04-25T22:00:00Z", "2025-04-26T22:00:00Z", "2025-04-27T22:00:00Z", "2025-04-28T22:00:00Z", "2025-04-29T22:00:00Z", "2025-04-30T22:00:00Z", "2025-05-01T22:00:00Z", "2025-05-02T22:00:00Z", "2025-05-03T22:00:00Z", "2025-05-04T22:00:00Z", "2025-05-05T22:00:00Z", "2025-05-06T22:00:00Z", "2025-05-07T22:00:00Z", "2025-05-08T22:00:00Z", "2025-05-09T22:00:00Z", "2025-05-10T22:00:00Z", "2025-05-11T22:00:00Z", "2025-05-12T22:00:00Z", "2025-05-13T22:00:00Z", "2025-05-14T22:00:00Z", "2025-05-15T22:00:00Z", "2025-05-16T22:00:00Z", "2025-05-17T22:00:00Z", "2025-05-18T22:00:00Z", "2025-05-19T22:00:00Z", "2025-05-20T22:00:00Z", "2025-05-21T22:00:00Z", "2025-05-22T22:00:00Z", "2025-05-23T22:00:00Z", "2025-05-24T22:00:00Z", "2025-05-25T22:00:00Z", "2025-05-26T22:00:00Z", "2025-05-27T22:00:00Z", "2025-05-28T22:00:00Z", "2025-05-29T22:00:00Z", "2025-05-30T22:00:00Z", "2025-05-31T22:00:00Z", "2025-06-01T22:00:00Z", "2025-06-02T22:00:00Z", "2025-06-03T22:00:00Z", "2025-06-04T22:00:00Z", "2025-06-05T22:00:00Z", "2025-06-06T22:00:00Z", "2025-06-07T22:00:00Z", "2025-06-08T22:00:00Z", "2025-06-09T22:00:00Z", "2025-06-10T22:00:00Z", "2025-06-11T22:00:00Z", "2025-06-12T22:00:00Z", "2025-06-13T22:00:00Z", "2025-06-14T22:00:00Z", "2025-06-15T22:00:00Z", "2025-06-16T22:00:00Z", "2025-06-17T22:00:00Z", "2025-06-18T22:00:00Z", "2025-06-19T22:00:00Z", "2025-06-20T22:00:00Z", "2025-06-21T22:00:00Z", "2025-06-22T22:00:00Z", "2025-06-23T22:00:00Z", "2025-06-24T22:00:00Z", "2025-06-25T22:00:00Z", "2025-06-26T22:00:00Z", "2025-06-27T22:00:00Z", "2025-06-28T22:00:00Z", "2025-06-29T22:00:00Z"]
confirmed = [36,37,29,68,74,28,28,28,32,24,74,73,25,21,13,18,10,33,31,24,18,10,15,11,13,22,9,14,23,19,13,17,13,16,4,4,6,2,14,8,2,7,3,4,5,12,17,23,23,19,39,19,15,15,5,6,5,4,16,13,7,5,3,2,2,4,6,11,0,7,3,1,1,4,5,2,7,7,2,6,10,13,1,4,3,1,2,6,5,0,3,4,1,0,7,10,0,4,4,2,5,10,9,5,1,1,1,2,5,5,4,1,1,2,1,2,1,0,1,2,2,6,3,2,5,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,2,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,0,0,0,0,0,1,2,0,0,0,0,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1,1,2,2,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,16,19,20,19,14,12,19,18,14,20,18,14,10,13,8,11,17,20,20,19,14,14,13,17,20,9,7,4,8,11,12,19,14,7,8,11,10,6,9,5,4,2,5,4,9,16,7,11,10,4,4,4,9,2,1,0,4,7,10,6,7,7,7,8,3,2,5,2,1,0,1,0,0,3,5,4,0,0,1,3,1,3,0,2,4,9,9,7,3,4]
optional = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
occupied = [36,37,29,68,74,28,28,28,32,24,74,73,25,21,13,18,10,33,31,24,18,10,15,11,13,22,9,14,23,19,13,17,13,16,4,4,6,2,14,8,2,14,10,11,5,12,31,23,23,19,39,20,15,15,5,6,5,4,16,15,7,5,3,2,2,13,6,11,0,7,3,1,1,4,5,2,16,16,11,15,10,43,1,4,7,1,17,21,20,15,38,4,1,0,7,10,0,4,4,2,5,10,9,5,1,1,1,2,5,5,4,1,1,2,1,2,1,0,1,2,2,6,3,2,5,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,2,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,0,0,0,0,0,1,2,0,0,0,0,1,2,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1,1,2,2,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,16,19,20,19,14,12,19,18,14,20,18,14,10,13,8,11,17,20,20,19,14,14,13,17,20,9,7,4,8,11,12,19,14,7,8,11,10,6,9,5,4,2,5,4,9,16,7,11,10,4,4,4,10,2,1,0,4,7,10,6,7,7,7,8,3,2,5,2,1,0,1,0,0,3,5,4,0,0,1,3,1,3,0,2,4,9,9,7,3,4]
categories = ['bfc965b5-f637-4826-84d2-b1ae00ca0b42', '59e4d7c6-0fb7-4de5-86dc-b1ae00ca0b42', '89247e0e-1865-422f-95b4-b1ae00ca0b42', '8b56dc8a-86bc-459f-ab07-b1ae00ca0b42']


#Parse dates and create month-based grouping
list1_dates = [datetime.strptime(date, "%Y-%m-%dT%H:%M:%SZ") + timedelta(days=1) for date in dates]
#Adjust to number of spacetypes
count = len(confirmed) // 4
spacetypeCount = len(categories)
result = []

for i in range(count):
    confirm = 0
    opt = 0
    occ = 0
    for j in range(spacetypeCount):
        confirm += confirmed[i + j * count]
        opt += optional[i + j * count]
        occ += occupied[i + j * count] - confirmed[i + j * count] - optional[i + j * count]
    result.append([list1_dates[i], confirm, opt, occ])


'''
for i in range(1):
    confirm = confirmed[i] + confirmed[i + count] + confirmed[i + count + count] + confirmed[i + count + count + count] 
    opt = optional[i] + optional[i + count] + optional[i + count + count]
    occ = (occupied[i] - confirmed[i] - optional[i]) + (occupied[i + count] - confirmed[i + count] - optional[i + count]) + (occupied[i + count + count]- confirmed[i + count + count] - optional[i + count + count])
    result.append([list1_dates[i], confirm, opt, occ])
'''

from collections import defaultdict
from datetime import datetime

#Group data by month
month_groups = defaultdict(lambda: {"dates": [], "confirmed": [], "optional": [], "occupied": []})

for date, confirmed, optional, occupied in result:
    month_key = f"{date.year}-{date.month:02d}"  # e.g., "2025-05"
    month_groups[month_key]["dates"].append(date.strftime("%Y-%m-%d"))
    month_groups[month_key]["confirmed"].append(confirmed)
    month_groups[month_key]["optional"].append(optional)
    month_groups[month_key]["occupied"].append(occupied)

# Step 2: Output grouped data
results = [{"month": month, **data} for month, data in month_groups.items()]

pprint.pprint(results[0])
# Return the results

